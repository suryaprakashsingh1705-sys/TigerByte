def solve():
    t = int(input())
    for _ in range(t):
        n, m = map(int, input().split())
        a = list(map(int, input().split()))
        segs = [tuple(map(int, input().split())) for _ in range(m)]

        # Sort intervals by start
        segs.sort()
        merged = []
        for l, r in segs:
            if not merged or merged[-1][1] < l:
                merged.append([l, r])
            else:
                merged[-1][1] = max(merged[-1][1], r)

        # If all positions are covered by some interval, we need at least 2 distinct values
        s = ['1'] * n
        for x in range(1, n + 1):
            # For x, we need both sides in every merged segment
            ok = True
            for l, r in merged:
                if r - l + 1 < 2:
                    ok = False
                    break
            s[x - 1] = '1' if ok else '0'
        print(''.join(s))
